.. _MD-theory:

分子动力学模拟(MD)
================================================  
分子动力学模拟是一种通过模拟体系原子和分子运动轨迹研究体系微观和宏观性质的计算机模拟方法，是研究分子体系的重要手段。根据经典力学，只要给定分子体系中原子和分子之间的相互作用，就可以利用牛顿运动方程可以求解分子或原子的运动轨迹，然后使用一定的统计方法计算出系统的力学、热力学、动力学性质。在分子动力学中首先将由N个粒子构成的系统抽象成N个相互作用的质点，每个质点具有坐
标(通常在笛卡儿坐标系中)、质量、电荷及成键方式，按目标温度根据Boltzmalm分布随机指定各质点的初始速度，然后根据所选用的力场中的相应的成键和非键能量表达形式对质点间的相互作用能以及每个质点所受的力进行计算。接着依据牛顿力学计算出各质点的加速度及速度，从而得到经一指定积分步长(通常1fs)后各质点新的坐标和速度，这样质点就移动了。经一定的积分步数后，质点就有了运动轨迹。设定时间间隔对轨迹进行保存。最后可以对轨迹进行各种结构、能量、热力学、动力学、力学等的分析，从而得到感兴趣的计算结果。分子动力学模拟方法已被广泛应用于化学、物理、材料科学、生物学等学科领域。

MD模拟的统计力学基础
-------------------------------------------------------

统计力学利用统计学方法和微观粒子的运动规律，研究多粒子体系的宏观性质，是现代物理学的支柱之一。利用统计力学解决热力学问题时，统计力学被称为统计热力学。宏观体系处于宏观静止状态，但其组成原子、分子处在不断的运动状态。在热力学，常用一组宏观可观测量描述宏观体系的状态。Gibbs提出，可以利用宏观可观察量作约束条件，定义具有不同统计特性的热力学体系，即热力学系综。重要的热力学系综包括：微正则系综（microcanonical ensemble, NVE），正则系综（canonical ensemble, NVT），巨正则系综（grand canonical ensemble, µVT），等温等压系综（isothermal–isobaric ensemble, NPT），等焓等压系综（isoenthalpic-isobaric ensemble, NPH）。

在NVE系综中，体系的粒子数（N）、体积（V）、总能量（E）均保持守恒，对应与环境没有能量交换、粒子交换的孤立体系。在NVT系综中，体系的粒子数（N）、体积（V）、温度（T）保持守恒，在MD模拟中通过体系与恒温热浴的能量交换实现温度守恒。常用控温算法有Nosé–Hoover控温、Berendsen控温、Andersen控温、Langevin控温等。在NPT系综中，体系的粒子数（N）、压强（p）、温度（T）均保持守恒，但体系体积可发生变化。实验室化学反应常在恒压下进行，NPT系综常被用于与化学反应相关的研究。µVT系综对应开放体系，不但与热浴存在能量交换，还与环境进行物质交换，体系的能量和粒子数不守恒，但系综与环境保持统计平衡。在NPH系综中，保持系统的粒子数N、压力P和焓值H都不变。然而，模拟时要保持压力与焓值为固定值,有一定难度。事实上,这种系综在实际的分子动力学模拟中很少见。

根据统计热力学，可以利用经典力学或量子力学计算系综平均，得到体系的热力学性质等。


分子内和分子间相互作用
-------------------------------------------------------

分子间力是分子间相互作用产生的力，包括分子与近邻粒子(原子或离子)之间相互作用产生的引力或斥力，影响体系的物理化学性质。分子内力是同一分子中的原子通过共用电子对产生相互作用力，影响体系的化学性质。分子间力通常小于分子内力，共用电子引起的共价键远强于分子间相互作用力。分子体系相互作用由分子间力和分子内力组成。

在MD模拟中，常用分子间相互作用势U(r)来表示分子间相互作用，r为分子间距离。因此，分子间相互作用势决定了物质的结构性质和物理化学性质。Van der Waals在研究实际气体和液体性质时，考虑了分子间相互作用力，提出在分子间距离r较小时分子间存在斥力，随着距离r的增大分子间的斥力逐渐被引力所取代，推导得到实际气体van der Waals状态方程。

分子间相互作用力分为分子间排斥力和吸引力两个部分。分子间斥力的本质是遵循Pauli不相容原理的波函数发生重叠时的排斥力。分子间引力由分子电子分布中心与原子核正电中心分离、色散等效应引起。在Lennard-Jones势函数中，近似于一对非键合原子或分子之间的非静电相互作用的势能，分子间引力随 :math:`r^{-6}` 变化，分子间斥力随 :math:`r^{-12}` 变化（图1），数学函数可表示为，

.. math::
    U(r) = 4 \varepsilon[(\frac{\sigma}{r})^{12}-(\frac{\sigma}{r})^6]

其中，r=σ对应体系势能为0的位置，ε是势阱的深度。对于复杂体系，难于利用量子力学理论精确计算U(r)，也难于用实验测量分子间相互作用力。

.. figure:: image/LJ.png
    :align: center
.. centered:: 图 1  分子间相互作用Lennard-Jones势函数U(r)与分子间距离r的关系


分子间相互作用模型
-------------------------------------------------------

力场模型是描述体系势能与粒子坐标关系的一组经验势函数，包括势能函数形式和力场参数两个部分。常用的经典力场模型有DREIDING、UFF、OPLS、CVFF、AMBER、GROMOS、CHARMM、COMPASS等。力场参数可以通过从头计算或半经验量子化学计算得到，也可以通过物理化学实验数据（如中子衍射、X射线衍射、电子衍射、核磁共振谱图、红外光谱、拉曼光谱等）拟合得到。分子体系总能量包括成键相互作用和非键相互作用两个部分，

.. math::
    E_{total}=E_{bonded}+E_{nonbonded}

其中，:math:`E_{bonded}` 是分子内相互作用，包括键长伸缩、键角弯曲、二面角扭曲、交叉项等作用，

.. math::
    E_{bonded}=E_{bond}+E_{angle}+E_{dihedral}+E_{improper}

* 键伸缩能:表示分子种原子间共价键的相互作用，近似为谐振子势函数

.. figure:: image/bond.png
    :align: center

* 键角弯曲能：表示三个原子所形成的键角变化所形成的能量，常见的完整函数形式一般使用的是谐振子势函数

.. figure:: image/angle.png
    :align: center
    
* 二面角扭转能：表示四个键合原子，扭转角是围绕中间两个原子之间共价键的旋转角，与键伸缩能和键角弯曲能不同的是，二面角扭转能一类具有多个最低点和最高点，因此采用周期性势函数进行描述
 
.. figure:: image/dihedral.png
    :align: center
    
* 交叉相互项：表示四个键合原子组成的反常扭转势，其中中心原子i与3个外围原子j、k和i相连。主要用来保持分子结构的平面性

.. figure:: image/improper.png
    :align: center
    
:math:`E_{nonbonded}` 是非键相互作用，包括长程静电力和van der Waals力两部分，

.. math::
    E_{nonbonded}=E_{el}+E_{vdW}											        

在MD模拟中，常用Lennard-Jones势近似 :math:`E_{vdW}` 。


MD模拟的积分算法
-------------------------------------------------------

实际体系中，描述粒子间相互作用的势能函数复杂，难以求解牛顿运动方程的解析解。因此，在MD模拟过程中采用数值积分的方法求解体系的运动方程，有关常用数值积分算法如下，

(1)  Verlet算法：利用Taylor展开粒子的位置坐标，

.. math::
  & r(t+\delta t)=r(t)+v(t)\delta t+\frac{1}{2} a(t)\delta{t^2}	\\							    
  & r(t-\delta t)=r(t)-v(t)\delta t+\frac{1}{2} a(t)\delta{t^2}									    

上述两式相加得到Verlet算法的基本公式，

.. math::
  r(t+\delta t)=2r(t)-r(t-\delta t)+a(t)\delta{t^2}									        

利用Verlet算法计算 :math:`t+\delta t` 时刻的粒子位置，需要t时刻的粒子位置和加速度、以及 :math:`t-\delta t` 时刻的粒子位置。该算法计算简单，不直接计算粒子的速度，但算法精度不高。

(2)  Leap-frog算法：首先计算 :math:`t+\frac{1}{2} \delta t` 时刻的粒子速度，

.. math::
    v(t+\frac{1}{2} \delta t)=v(t-\frac{1}{2} \delta t)+a(t)\delta t										

然后，计算 :math:`t+\delta t` 时刻的粒子位置，

.. math::
   r(t+\delta t)=r(t)+v(t+\frac{1}{2} \delta t)\delta t									        

Leap-frog算法方法虽然直接计算体系的粒子速度，但体系的粒子速度和位置不同步。 :math:`t` 时刻的粒子速度近似为，

.. math::
   v(t)=\frac{1}{2} [v(t-\frac{1}{2} \delta t)+v(t+\frac{1}{2} \delta t)]											 

(3)  Velocity Verlet算法：具有更高的计算精度，体系的粒子位置、速度分别表示为，

.. math::
  & r(t+\delta t)=r(t)+v(t)\delta t+\frac{1}{2} a(t)\delta{t^2}	\\								  
  & v(t+\delta t)=v(t)+\frac{1}{2} [a(t)+a(t+\delta t)]\delta t							      

(4)  Beeman's算法：基于Verlet算法改进体系的粒子位置和速度分别为，

.. math::
  & r(t+\delta t)=r(t)+v(t)\delta t+\frac{2}{3} a(t)\delta{t^2}	-\frac{1}{6} a(t-\delta t)\delta{t^2}	\\				
  & v(t+\delta t)=v(t)+v(t)\delta t+\frac{1}{3} a(t)\delta t+\frac{5}{6} a(t)\delta t-\frac{1}{6} a(t-\delta t)\delta t		      

Beeman's算法的计算精确度得到了极大的提高，但计算成本也相应提高
